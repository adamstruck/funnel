// Code generated by go-bindata.
// sources:
// examples/capture-stdout-stderr.json
// examples/google-storage.json
// examples/resource-request.json
// examples/input-content.json
// examples/hello-world.json
// examples/log-streaming.json
// examples/md5sum.json
// examples/s3.json
// examples/full-hello.json
// DO NOT EDIT!

package examples

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _examplesCaptureStdoutStderrJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x92\xbf\x8e\xf2\x30\x10\xc4\xfb\x3c\xc5\xc8\x35\x1f\xa9\xbe\x86\xfa\x9a\xab\x29\x4f\x14\x56\xbc\x10\x4b\xf1\x1f\xd9\xeb\x13\x27\x8e\x77\x3f\xad\x93\x5c\x08\x3a\x90\x68\x2c\xe4\x59\x0f\xf3\x9b\xcd\xa5\x01\x94\xd7\x8e\xd4\x0e\x6a\xcf\x26\x14\x86\xf6\x06\x7b\x36\x94\x12\x3a\x1d\xb9\x24\x52\x1b\x19\x33\x94\xbb\x64\x23\xdb\xe0\x65\xfa\x8d\x5c\xf0\x99\x93\x66\xca\xd3\xa0\xf5\x27\xe4\xc5\x24\x8f\x26\xf2\xb3\xc4\x21\x68\x23\x3a\xf7\xe4\xa0\x33\x42\xe1\x58\x18\x47\x3b\x50\xde\x8e\x7f\x60\x7d\x2c\x9c\xd5\x0e\x1f\x0d\x00\x5c\xea\x79\x93\xaf\xea\x75\xb4\x5e\xdf\xe5\x79\x17\x15\x1c\xd0\x05\xe7\xb4\x37\x5b\xb4\xec\x62\x5b\x1f\xc1\x95\xcc\xa0\xb3\xcd\x8c\xe0\x25\x03\xfa\x90\x19\xf9\x2b\x33\xb9\xed\xe2\x59\xd2\x20\x5e\x92\x6a\xd7\xb6\x8b\xc1\x32\x11\x35\xf7\x32\x32\x69\xaa\xde\x5f\x1b\xe0\x50\x19\x46\xac\x27\x10\x63\x3f\x0f\x29\xa6\x1d\x84\xe3\x8c\x01\x3b\xb7\x4b\xa6\x56\xd9\x85\x68\xc9\x08\x68\x8d\x30\xf5\xfd\x2a\xd5\x7d\x8c\x15\x96\x28\x23\xd7\xe6\x21\x04\xa5\xf4\x0c\x42\x16\xff\x12\x44\x7d\xf0\x3a\xc4\x2a\xc6\x0a\x42\x94\xbb\xe5\xd0\x99\xba\xc2\x21\xfd\xb1\x1e\xeb\xf4\xa9\xa2\xe9\x21\x5a\x4f\x8b\xe7\x44\x20\x2f\x54\xee\xd5\x06\xea\x5f\x27\xa7\x33\xff\x73\x71\xf3\x37\x86\x6f\x30\x11\x5a\x43\x9f\x73\xaa\xc3\xaf\xc5\xd4\xf5\x6d\xbb\x8f\xb4\x75\xe8\xe6\xda\xfc\x04\x00\x00\xff\xff\x67\xc7\x65\x28\xa1\x03\x00\x00")

func examplesCaptureStdoutStderrJsonBytes() ([]byte, error) {
	return bindataRead(
		_examplesCaptureStdoutStderrJson,
		"examples/capture-stdout-stderr.json",
	)
}

func examplesCaptureStdoutStderrJson() (*asset, error) {
	bytes, err := examplesCaptureStdoutStderrJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "examples/capture-stdout-stderr.json", size: 929, mode: os.FileMode(420), modTime: time.Unix(1528485354, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _examplesGoogleStorageJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8f\xcd\x4a\x03\x31\x14\x85\xf7\xf3\x14\x87\xac\x14\x6a\x67\x5c\x54\xb0\x5b\x05\x37\x82\x62\xed\x4a\xba\xb8\x4d\x32\x63\x30\x7f\x4c\x6e\xb0\xb4\xf4\xdd\x25\x29\x75\xf0\x67\x33\x0c\xe4\x7c\xe7\xdc\xef\xd0\x00\xc2\x93\xd3\x62\x09\xf1\x10\xc2\x60\x35\xee\x6c\xc8\x0a\x2b\x0e\x23\x0d\x1a\x7a\x47\x2e\x5a\x2d\x66\x25\xa9\x74\x92\xa3\x89\x6c\x82\x2f\xc0\x2b\xa5\x0f\x18\x1f\x33\x27\x90\x57\x08\x99\xeb\xbf\x24\x8f\xad\xc6\xbf\x7d\xeb\x97\xc7\x34\x3f\xb5\xe9\x9d\x96\x99\xc3\x98\xc4\x12\x6f\x0d\x00\x1c\xea\x17\x10\xc6\xd1\x50\x6f\xca\xdb\xec\x39\xd7\x7c\x7d\x90\xc1\x39\xf2\xaa\x10\xc2\xa9\x45\xca\x4e\xcc\x20\x5a\x76\xb1\xed\x8d\xd5\xf3\xbd\x89\x62\x53\xc3\xc7\x06\xd8\xd4\x9d\xd3\x85\x7f\x47\xce\xde\x7b\x13\x0b\x3b\x8d\xfc\xd2\xbc\x0f\x9f\xde\x06\x52\x20\xc4\xbc\xb5\x46\xa2\xc4\xd1\x8f\xc1\x9d\x1d\xcf\x76\x17\xeb\x15\x9e\x89\xb5\x67\x3c\xf5\xbd\x91\x1a\x8a\x98\x2e\xa7\xea\x3c\xda\x52\x39\xa4\x65\xdb\xe6\x14\x39\x5c\x45\x32\x63\x4b\x31\x5a\x23\xa9\x2c\xa6\xb6\x5b\xdc\x76\x5d\x77\x7d\x53\x65\xbe\xc9\x48\xfc\x5e\xd0\x9f\xae\x93\x6a\x73\x6c\xbe\x02\x00\x00\xff\xff\x40\x00\x1c\x30\xce\x01\x00\x00")

func examplesGoogleStorageJsonBytes() ([]byte, error) {
	return bindataRead(
		_examplesGoogleStorageJson,
		"examples/google-storage.json",
	)
}

func examplesGoogleStorageJson() (*asset, error) {
	bytes, err := examplesGoogleStorageJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "examples/google-storage.json", size: 462, mode: os.FileMode(420), modTime: time.Unix(1516131226, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _examplesResourceRequestJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x34\x8f\x39\x6b\x03\x31\x10\x85\x7b\xfd\x8a\xc7\xd4\x22\xec\x82\xdd\x6c\x97\x03\x5c\x05\x82\x21\x55\x30\x61\xa2\x1d\x8c\xb0\x75\x44\xa3\x85\x40\xd8\xff\x6e\xa4\xb5\x4b\xbd\xe3\x7b\x9a\x7f\x03\x50\xe4\x20\x34\x81\x8e\xa2\x69\x29\x4e\x50\xe4\x77\x11\xad\x64\x9b\x3b\x8b\xba\xe2\x73\xf5\x29\xb6\xd0\x9b\x84\x14\xb5\x16\xae\xa2\x60\x54\xd6\xcb\x23\xef\xe3\x19\x3b\xbc\x7e\x7c\xc2\xa5\x22\x6a\x31\xee\x71\x78\xc1\xf1\xf9\xdd\x82\xe3\x8c\x71\x18\xda\x7b\xf6\x7a\x81\x66\x76\xf2\xb4\x2d\x94\xfb\xae\xd2\x84\xf6\x21\x80\x5c\x5e\xbe\x3b\x84\x26\xec\xec\xa6\x15\x0e\x87\x1f\x9a\x30\xee\xef\x42\x03\x6d\xca\x30\x18\x60\xed\x30\xf9\x13\xb7\xd4\x54\x5a\xf3\xab\xe7\x36\x24\x40\x3e\xf0\xb9\x1f\xca\xd7\xec\xa3\x90\x7d\x18\x2e\x85\xc0\x71\x6e\x0d\xd2\xab\x48\x26\x0b\x1a\xe9\xd4\xfd\xd5\x00\x27\xb3\x9a\x5b\x00\x00\x00\xff\xff\xc0\xca\xf1\x83\x2b\x01\x00\x00")

func examplesResourceRequestJsonBytes() ([]byte, error) {
	return bindataRead(
		_examplesResourceRequestJson,
		"examples/resource-request.json",
	)
}

func examplesResourceRequestJson() (*asset, error) {
	bytes, err := examplesResourceRequestJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "examples/resource-request.json", size: 299, mode: os.FileMode(420), modTime: time.Unix(1514578149, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _examplesInputContentJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x90\xbd\x6e\xe3\x30\x10\x84\x7b\x3d\xc5\x40\x8d\x1b\xc3\xaa\xae\x71\x7d\xc5\x5d\x7d\xc5\x15\x89\x11\x30\xe4\xca\x26\x40\x72\x05\x72\x89\x24\x30\xfc\xee\x01\x57\x4a\xfc\x03\xc3\x69\x58\x70\x67\x76\xe7\x9b\x63\x07\xf4\xc9\x44\xea\xb7\xe8\xff\xa6\xa9\x0a\x46\x1f\x08\x96\x93\x50\x12\x98\xe4\xc0\x55\xbe\xfe\xfb\x75\xd3\x3b\x2a\x36\xfb\x49\x3c\xa7\x66\xfb\x4d\x91\x53\x91\x6c\x84\x0a\x6a\xf1\x69\x0f\x39\x10\x56\xcb\x8e\x15\x46\x4f\xc1\x61\xe4\x0c\xdf\x2e\x14\x08\xc3\x66\x32\x42\x30\xf3\x39\x4e\x6a\x39\x70\x11\x94\x8f\x22\x14\xe7\x4b\xb3\xbe\xdf\xe2\xa9\x03\x80\xa3\xbe\x17\x89\xad\x91\x79\xa7\xca\x75\x74\x13\x6e\x66\x12\x46\x74\xbf\x4a\x8d\x1b\x0c\x12\xa7\xc1\x27\xbc\xf9\x10\xf0\x4a\x4b\x10\x77\x27\xc2\xe6\xbc\x74\x32\x72\x68\xdb\x16\xf3\x79\xb0\x30\xb6\xd9\x1f\x0a\x81\xf1\x9f\x73\x70\xcf\xa9\x57\xc1\xa9\x03\x76\x0a\x32\x77\xf8\x03\x49\x11\xc7\x0f\x50\xfe\xe9\x18\x3c\x42\xb1\x0b\xac\x99\xa4\x66\xd2\x3e\x35\x99\x50\x91\x17\xd5\x3c\x82\xa9\x39\xb4\x75\xad\xf8\xed\x30\xa8\xd1\x1a\xf5\x5d\x15\x79\xc5\xdc\x72\xdd\x20\xd1\x3b\xd9\x2a\x9c\xef\x40\xf9\x68\xf6\x4a\x65\xc2\xe4\x13\x5d\xd6\x15\xa3\x49\xae\x39\x1a\x71\xbf\x3e\x57\xba\xfb\x16\x2d\x35\xdc\x3f\xdd\x9d\xba\xcf\x00\x00\x00\xff\xff\x2a\x72\x4e\x88\xb4\x02\x00\x00")

func examplesInputContentJsonBytes() ([]byte, error) {
	return bindataRead(
		_examplesInputContentJson,
		"examples/input-content.json",
	)
}

func examplesInputContentJson() (*asset, error) {
	bytes, err := examplesInputContentJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "examples/input-content.json", size: 692, mode: os.FileMode(420), modTime: time.Unix(1528485341, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _examplesHelloWorldJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4c\x8e\x31\xce\xc2\x30\x0c\x46\xf7\x9c\xe2\x93\xe7\xea\x3f\x40\xe7\x7f\xe0\x0e\xa8\x83\x49\x2d\x1a\x91\xc4\x55\x6c\x04\x52\xd5\xbb\xa3\x84\x85\xc5\xcb\x7b\xcf\xf6\x11\x00\xaa\x5c\x84\x66\xd0\x45\x72\x56\xbc\xb4\xe5\x95\xa6\x0e\x56\xb1\xd8\xd2\xee\x49\x6b\xe7\xff\x52\xb4\x9a\x37\x76\x31\xf8\x26\x28\x6a\x8e\x1b\x5b\x8a\x90\xb8\x29\x9c\xed\xf1\xf7\x4d\xe5\x2d\xf1\xe9\xda\x8c\x66\x5c\x03\x00\x1c\x63\x02\x94\x0a\xdf\xc7\x3d\xce\x7b\xaa\x32\xfc\x01\xa2\x96\xc2\x75\xed\x05\xf5\x7d\x34\x81\xb6\x9f\x9f\x96\x21\x9e\x01\x58\xc2\x19\x3e\x01\x00\x00\xff\xff\x1b\x6b\x00\xfc\xbb\x00\x00\x00")

func examplesHelloWorldJsonBytes() ([]byte, error) {
	return bindataRead(
		_examplesHelloWorldJson,
		"examples/hello-world.json",
	)
}

func examplesHelloWorldJson() (*asset, error) {
	bytes, err := examplesHelloWorldJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "examples/hello-world.json", size: 187, mode: os.FileMode(420), modTime: time.Unix(1516131226, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _examplesLogStreamingJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2c\x8f\xb1\x6e\xf3\x30\x10\x83\x77\x3f\x05\xa1\x39\x7f\x82\x7f\x4d\xd6\xa2\x53\x87\xee\x45\x86\x8b\x44\xd8\x02\xa4\x93\xa1\x3b\xb7\x0d\x82\xbc\x7b\x61\xb5\x0b\x87\xfb\x78\x04\xf9\x98\x80\xa0\x52\x19\xce\x08\x6f\x6d\x86\x79\xa7\xd4\xac\x73\x38\xec\x28\xd1\x62\xcf\xab\xe7\xa6\xbb\xe3\x85\xb5\xa9\x79\x17\xa7\xc1\x17\x71\x98\xa7\xb6\xf9\x89\xbd\xa3\xb4\xd9\x20\x9d\x7f\x19\x4c\xb8\xdd\xe1\x0d\xbe\x10\xaf\x9b\x2a\x0b\x92\xd8\x72\x6b\xd2\x93\x1d\xf1\xde\xb3\xba\x0d\x9a\xc4\x79\xf2\x5c\x09\x7e\xb2\xdf\x61\x8c\x4d\xd3\x01\x9b\x7a\x2e\x88\xa2\x91\x85\xe9\xf8\x5b\x89\xdf\x8c\x9b\xb7\x6e\xe1\x8c\x8f\x09\x00\x1e\x43\x81\x90\xab\xcc\x63\x89\x94\x35\x2b\x87\x7f\x80\xd8\x6a\x15\x4d\xfb\x47\xb0\x25\x1c\x10\xfe\xc5\x5d\xbf\x96\x5c\x08\xef\x1b\x2f\x48\x6d\xf4\xb8\xc0\x0a\xb9\xe2\xff\x7e\x51\x86\xeb\xc8\x78\x4e\xc0\x75\x7a\x4e\x3f\x01\x00\x00\xff\xff\x88\xae\x93\xb2\x30\x01\x00\x00")

func examplesLogStreamingJsonBytes() ([]byte, error) {
	return bindataRead(
		_examplesLogStreamingJson,
		"examples/log-streaming.json",
	)
}

func examplesLogStreamingJson() (*asset, error) {
	bytes, err := examplesLogStreamingJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "examples/log-streaming.json", size: 304, mode: os.FileMode(420), modTime: time.Unix(1516131226, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _examplesMd5sumJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x92\x3f\x6b\xc3\x30\x10\xc5\x77\x7f\x8a\x87\xe6\x10\x4f\x5d\x32\x77\xe9\xdc\xb1\x84\x20\xac\x4b\x22\xb0\xfe\xe0\x3b\x81\x4b\xc8\x77\x2f\x3a\x2b\x35\x24\x69\x0b\x5d\x8c\x6d\xbd\x7b\xf7\x7e\xcf\xbe\x74\x80\x89\x36\x90\xd9\xc1\x04\xf7\xc2\x25\x80\x66\x1b\xf2\x48\x66\x53\xcf\x1c\xf1\x30\xf9\x2c\x3e\xc5\x2a\x79\xa5\x90\x22\xcb\x64\x85\x18\x3e\xe6\x22\xb0\xd1\x21\x15\xa9\xb7\x47\x3f\x12\xa3\xb0\x8f\x27\x58\xb0\xaf\x36\x68\xae\x43\x0a\xc1\x46\xb7\x5d\x6c\x75\x94\xcd\x0e\x1f\x1d\x00\x5c\xf4\xfa\x18\x45\x65\x3a\xa1\xa7\x77\x61\xde\x74\xbf\xa4\xb6\x62\x8b\x5e\x42\xee\x97\x87\xc3\x12\x2e\x14\x16\xd0\xec\x59\x90\x22\xe4\x4c\x38\x27\x16\xf0\x27\x0b\x85\xed\xea\x5c\xa6\xb1\x3a\x56\x80\x5d\xdf\x3f\xf8\xac\xc2\x6c\xe5\x5c\x95\x2a\xf1\xd1\xe8\xfb\x6b\x07\xec\x95\x6b\x29\xe2\x6f\x30\x16\x97\x7e\x21\x7b\xd7\x63\xa4\xe3\xad\x3d\xcf\x18\x6c\x96\x32\x91\xd3\xc2\x87\x94\x3d\xb9\xca\x7e\xcb\x7a\x68\xdf\xe0\x9f\x98\xcb\xf4\x0f\x9c\x35\xea\x1d\x28\xcd\x34\x14\x49\xd3\x13\x54\x1f\xec\x49\x59\xed\x98\x7d\xa4\xd5\xb3\xfd\x02\x75\xa2\xf5\x60\x36\x6b\x93\xfb\x6f\x5d\x2b\xe7\xf9\xf6\xee\xda\x7d\x05\x00\x00\xff\xff\xfc\xb8\x21\xf3\xb5\x02\x00\x00")

func examplesMd5sumJsonBytes() ([]byte, error) {
	return bindataRead(
		_examplesMd5sumJson,
		"examples/md5sum.json",
	)
}

func examplesMd5sumJson() (*asset, error) {
	bytes, err := examplesMd5sumJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "examples/md5sum.json", size: 693, mode: os.FileMode(420), modTime: time.Unix(1528485335, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _examplesS3Json = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x90\x4b\x6b\x7a\x31\x14\xc4\xf7\xf7\x53\x0c\x59\xfd\xff\xa0\xde\xd8\x5b\x17\x71\xdb\x6e\x0a\x5d\x69\xbb\x2a\x52\x8e\x37\xd1\x86\xe6\x45\x1e\x54\x10\xbf\x7b\x49\xa4\xda\xc7\x26\x04\x66\xce\xcc\xf9\x9d\x63\x07\x30\x47\x56\xb1\x25\xd8\x7a\xc0\x3a\xfb\x48\x7b\x05\x75\x20\x1b\x8c\x62\x93\xaa\x4b\x95\xc6\xa8\x43\xd6\xde\x55\xdb\x13\xa5\x77\x68\x17\x4a\x4e\x20\x27\xe1\x4b\x6e\xff\x91\x1c\xb6\x0a\x77\xc6\x17\x79\x09\x7a\x5e\x3d\xa6\xd9\x39\x46\x1d\xd4\x58\xb2\x8f\x89\x2d\xf1\xd2\x01\xc0\xb1\xbd\x00\xd3\x96\xf6\x6d\x85\xb2\x2d\x2e\x97\xe6\x6f\xc2\xe8\xad\x25\x27\xeb\x04\xb3\x72\x91\x8a\x65\x13\xb0\x3e\xdb\xd0\xef\xb4\x51\xb3\x83\x35\x6c\xd3\xcc\xa7\x0e\xd8\xb4\x9e\xf3\x6a\x7f\x4b\xbe\x30\x9b\x7e\xad\xf8\x45\x77\xef\x3f\x9c\xf1\x24\x41\x08\x65\x6b\xf4\x88\x5a\x84\x5d\xf4\x16\xdf\x0e\xf4\xef\x61\xb5\xc6\xce\x47\x0b\x21\x38\x24\x65\xfa\x7f\x8d\x2c\xd1\xd4\xa8\x34\x2c\xfb\x5e\xc7\x34\xad\xbe\xa9\x10\xbc\xbf\xe1\x5c\x0c\xf3\x41\x0c\xb7\x62\xe0\x9c\xcf\x17\xfc\xf5\x5c\xd2\x40\x2e\xf3\x81\xf2\x5b\x0d\xf8\xc9\x79\xc5\xec\x4e\xdd\x67\x00\x00\x00\xff\xff\x7c\xcd\x05\xad\xb9\x01\x00\x00")

func examplesS3JsonBytes() ([]byte, error) {
	return bindataRead(
		_examplesS3Json,
		"examples/s3.json",
	)
}

func examplesS3Json() (*asset, error) {
	bytes, err := examplesS3JsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "examples/s3.json", size: 441, mode: os.FileMode(420), modTime: time.Unix(1516131226, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _examplesFullHelloJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x90\xcd\xea\xdb\x30\x10\xc4\xef\x7e\x8a\x45\xe7\xbf\x23\xda\x63\x0a\x3d\x35\x21\xa7\x06\x42\x42\x0f\x25\x94\xb5\xb2\x8e\x44\x25\xad\xd1\x47\x12\x28\x79\xf7\xa2\x75\x5c\x0a\xf1\x61\xb1\x67\xc7\xbf\x1d\xe6\x4f\x07\xa0\x22\x06\x52\x6b\x50\xdb\xea\x3d\xec\xc8\x7b\x86\x3b\x27\x7f\x51\x1f\x6d\x7b\xa1\x6c\x92\x9b\x8a\xe3\xd8\x4c\xdf\x28\x70\xcc\x25\x61\xa1\x0c\xc5\x12\x04\xce\x05\x06\xcc\xce\x00\x19\xcb\x50\x30\xff\x86\xbb\x2b\x16\xd0\x7b\x71\xd0\xa3\x24\xcc\xab\x19\x57\xf0\x9a\xd5\x1a\xda\xe1\xf9\xab\xdf\x7f\xdf\x34\xf0\xf1\xc7\x5e\x1c\x2f\xf5\xb8\x3b\x6c\x44\xdf\xee\x4f\x07\xd5\x01\x3c\xe5\x77\xae\x65\xaa\xa5\x11\x7e\xbe\x10\x35\xf9\x66\xd3\xa7\x4c\x29\xeb\xa1\x1a\x8b\x11\x49\xe7\x64\xf4\xd5\x15\x5b\x87\x95\xe1\xa0\xd9\xe6\xda\x1b\x0e\x53\x3f\x38\xd6\x63\x8d\x91\xbc\xfe\x95\x4d\xc2\x62\xac\x1e\xab\xf7\xfd\x8c\xd6\x4b\x88\x09\x8b\x15\xf0\x72\xb2\x65\x38\x4b\x88\x1b\xfb\x1a\x48\x42\x28\x7d\x63\xff\x49\x7d\x80\xbc\x7c\x56\xb3\x81\x1e\x64\x6a\xe1\x24\x16\xc1\xcd\x61\x01\x94\x0b\x78\x95\xb6\xd1\x4f\x2e\xd2\xeb\x1a\x80\x32\x1c\x02\xc6\x8b\x40\xb3\x6d\xc4\xde\xb4\x29\xa5\x8e\xcc\xf0\x15\x96\x28\x7a\x64\xfe\x32\xb7\x3d\x60\xfa\x7f\x31\x60\x9a\x23\x08\x92\xe2\xed\x5f\xd5\x22\xbc\x55\x2d\xea\x5b\xd5\xed\x79\x76\xcb\x3c\x77\xcf\xee\x6f\x00\x00\x00\xff\xff\x0b\xad\xd9\x44\x28\x02\x00\x00")

func examplesFullHelloJsonBytes() ([]byte, error) {
	return bindataRead(
		_examplesFullHelloJson,
		"examples/full-hello.json",
	)
}

func examplesFullHelloJson() (*asset, error) {
	bytes, err := examplesFullHelloJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "examples/full-hello.json", size: 552, mode: os.FileMode(420), modTime: time.Unix(1528485416, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"examples/capture-stdout-stderr.json": examplesCaptureStdoutStderrJson,
	"examples/google-storage.json":        examplesGoogleStorageJson,
	"examples/resource-request.json":      examplesResourceRequestJson,
	"examples/input-content.json":         examplesInputContentJson,
	"examples/hello-world.json":           examplesHelloWorldJson,
	"examples/log-streaming.json":         examplesLogStreamingJson,
	"examples/md5sum.json":                examplesMd5sumJson,
	"examples/s3.json":                    examplesS3Json,
	"examples/full-hello.json":            examplesFullHelloJson,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"examples": {nil, map[string]*bintree{
		"capture-stdout-stderr.json": {examplesCaptureStdoutStderrJson, map[string]*bintree{}},
		"full-hello.json":            {examplesFullHelloJson, map[string]*bintree{}},
		"google-storage.json":        {examplesGoogleStorageJson, map[string]*bintree{}},
		"hello-world.json":           {examplesHelloWorldJson, map[string]*bintree{}},
		"input-content.json":         {examplesInputContentJson, map[string]*bintree{}},
		"log-streaming.json":         {examplesLogStreamingJson, map[string]*bintree{}},
		"md5sum.json":                {examplesMd5sumJson, map[string]*bintree{}},
		"resource-request.json":      {examplesResourceRequestJson, map[string]*bintree{}},
		"s3.json":                    {examplesS3Json, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
